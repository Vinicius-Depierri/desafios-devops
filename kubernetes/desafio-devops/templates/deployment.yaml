apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace | default "app-desafio" }}
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - name: web
        image: {{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}
        ports:
        - containerPort: {{ .Values.app.containerPort }}
        envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-config
        resources:
          limits:
            cpu: {{ .Values.app.resources.limits.cpu }}
            memory: {{ .Values.app.resources.limits.memory }} 
          requests:
            cpu: {{ .Values.app.resources.requests.cpu }}
            memory: {{ .Values.app.resources.requests.memory }}
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - "netstat -tuln | grep 3000 || exit 1"
          initialDelaySeconds: {{ .Values.app.probes.liveness.initialDelay }}
          periodSeconds: {{ .Values.app.probes.liveness.period }}
          timeoutSeconds: {{ .Values.app.probes.liveness.timeout }}
          failureThreshold: {{ .Values.app.probes.liveness.failures }}
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - "netstat -tuln | grep 3000 || exit 1"
          initialDelaySeconds: {{ .Values.app.probes.readiness.initialDelay }}
          periodSeconds: {{ .Values.app.probes.readiness.period }}